{"version":3,"sources":["components/Header.jsx","components/Todo.jsx","components/Loader.jsx","App.js","index.js"],"names":["Header","handleFilter","className","onClick","Todo","title","status","handleCompleteTodo","id","Loader","App","useState","todoList","setTodoList","filtro","setFiltro","useEffect","handleTodoList","a","fetch","response","json","result","resultTodoList","slice","map","todo","completed","estado","filter","z","length","singleTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAqBeA,EAhBA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACf,OACE,mCACE,qBAAKC,UAAU,SAAf,SACE,oBAAIA,UAAU,OAAd,yBAGF,sBAAKA,UAAU,UAAf,UACA,wBAAQC,QAAU,kBAAMF,EAAa,QAAQC,UAAU,WAAvD,oBACA,wBAAQC,QAAU,kBAAMF,EAAa,aAAaC,UAAU,WAA5D,yBACA,wBAAQC,QAAU,kBAAMF,EAAa,eAAeC,UAAU,aAA9D,6BCMSE,G,MAhBF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,mBAAoBC,EAAS,EAATA,GACjD,OACE,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,6BAAKG,MAGP,qBAAKH,UAAU,eAAf,SACE,wBAAQA,UAAWI,EAAS,WAAa,QAASH,QAAS,kBAAMI,EAAmBC,IAApF,SACGF,EAAS,QAAU,oBCDfG,G,MARA,WACb,OACE,qBAAKP,UAAU,SAAf,SACE,gDCqESQ,G,MAnEH,WAIV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAU,MAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAIAC,qBAAU,WACR,IAAMC,EAAc,uCAAG,gCAAAC,EAAA,sEACEC,MAAM,8CADR,cACfC,EADe,gBAEAA,EAASC,OAFT,OAEfC,EAFe,OAGfC,EAAiBD,EAAOE,MAAM,EAAG,IAEvCX,EAAYU,GACZR,EAAUQ,GANW,2CAAH,qDASpBN,MACC,IAGH,IAAMV,EAAqB,SAACC,EAAIF,GAC9BO,EAAYD,EAASa,KAAI,SAAAC,GAAI,OAAIA,EAAKlB,KAAOA,EAAZ,2BAAsBkB,GAAtB,IAA4BC,WAAYD,EAAKC,YAAcD,MAC5FX,EAAWD,EAAOW,KAAI,SAAAC,GAAI,OAAIA,EAAKlB,KAAOA,EAAZ,2BAAsBkB,GAAtB,IAA4BC,WAAYD,EAAKC,YAAcD,OAiB3F,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CACAD,aAjBiB,SAAC2B,GAER,QAATA,EACDb,EAAUH,GAES,aAAXgB,EACRb,EAAUH,EAASiB,QAAO,SAACC,GAAD,OAAmB,IAAdA,EAAEH,cAChB,eAATC,GACRb,EAAUH,EAASiB,QAAO,SAACC,GAAD,OAAoB,IAAdA,EAAEH,iBAYlC,qBAAKzB,UAAU,iBAAf,SACGY,GAAUA,EAAOiB,OAAS,EACzBjB,EAAOW,KAAI,SAAAO,GAAU,OACnB,cAAC,EAAD,CAEE3B,MAAO2B,EAAW3B,MAClBC,OAAQ0B,EAAWL,UACnBpB,mBAAoBA,EACpBC,GAAIwB,EAAWxB,IAJVwB,EAAWxB,OAQpB,cAAC,EAAD,WCjEVyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3828485b.chunk.js","sourcesContent":["import React from \"react\";\n\n//Estilos\nimport \"../styles/Header.css\";\n\nconst Header = ({handleFilter}) => {\n  return (\n    <header>\n      <div className=\"titulo\">\n        <h4 className=\"logo\">ToDo List</h4>\n      </div>\n      \n      <div className=\"botones\">\n      <button onClick={ () => handleFilter(\"all\")} className=\"complete\"> Todas</button>\n      <button onClick={ () => handleFilter(\"complete\")} className=\"complete\"> InCompleta</button>\n      <button onClick={ () => handleFilter(\"incompleta\")} className=\"incompleta\">Completa</button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\n//Styles\nimport \"../styles/Todo.css\";\n\nconst Todo = ({ title, status, handleCompleteTodo, id }) => {\n  return (\n    <div className=\"todo-card\">\n      <div className=\"todo-title\">\n        <h4>{title}</h4>\n      </div>\n\n      <div className=\"todo-actions\">\n        <button className={status ? \"complete\" : \"reset\"} onClick={() => handleCompleteTodo(id)}>\n          {status ? \"Reset\" : \"Complete\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n\n//Styles\nimport \"../styles/Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <p>Cargando...</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\nimport Loader from \"./components/Loader\";\n\n//Styles\nimport \"./styles/App.css\";\n\nconst App = () => {\n\n\n  //STATE\n  const [todoList, setTodoList] = useState([]);\n  const [filtro, setFiltro] = useState (null);\n\n  //EFFECT\n\n  useEffect(() => {\n    const handleTodoList = async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\n      const result = await response.json();\n      const resultTodoList = result.slice(0, 20);\n      // setTimeout(() => {\n      setTodoList(resultTodoList);\n      setFiltro(resultTodoList)\n      // }, 2000);\n    };\n    handleTodoList();\n  }, []);\n\n  //FUNCIONES\n  const handleCompleteTodo = (id, status) => {\n    setTodoList(todoList.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo));\n    setFiltro( filtro.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo));\n  };\n\n  const handleFilter = (estado)=>{\n\n    if(estado===\"all\"){\n      setFiltro(todoList);\n    \n    }else if (estado === \"complete\"){\n      setFiltro(todoList.filter((z)=>z.completed===true) )\n    }else if (estado===\"incompleta\"){\n      setFiltro(todoList.filter((z)=> z.completed===false))\n    }\n  \n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header \n      handleFilter={handleFilter}\n      />\n\n      <div className=\"todo-container\">\n        {filtro && filtro.length > 0 ?  (\n          filtro.map(singleTodo => (\n            <Todo\n              key={singleTodo.id}\n              title={singleTodo.title}\n              status={singleTodo.completed}\n              handleCompleteTodo={handleCompleteTodo}\n              id={singleTodo.id}\n            />\n          ))\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}